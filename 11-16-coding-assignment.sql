/*
    Products
        Id
        Name
        Price

    Orders
        Id
        ProductId
        CustomerId

    Customers
        Id
        FirstName
        LastName
        CardNumber
 */

/*****************************************************************/
/******************************[DDL]******************************/
/*****************************************************************/
-- DROP TABLE [Product]
 CREATE TABLE [Product] (
     [ProductId]    INT             NOT NULL PRIMARY KEY IDENTITY,
     [Name]         VARCHAR(64)     NOT NULL UNIQUE,
     [Price]        MONEY           NOT NULL
 );
 GO

 -- DROP TABLE [Customer]
 CREATE TABLE [Customer] (
     [CustomerId]   INT             NOT NULL PRIMARY KEY IDENTITY,
     [FirstName]    VARCHAR(128)    NOT NULL,
     [LastName]     VARCHAR(128)    NOT NULL,
     [CardNumber]   VARCHAR(16)     NOT NULL UNIQUE,
 );
 GO

 -- DROP TABLE [Order]
 CREATE TABLE [Order] (
     [OrderId]      INT             NOT NULL PRIMARY KEY IDENTITY,
     [ProductId]    INT             NOT NULL UNIQUE,
     [CustomerId]   INT             NOT NULL UNIQUE
 );
 GO

ALTER TABLE [Order] 
    ADD CONSTRAINT FK_Orders_CustomerId FOREIGN KEY (CustomerId)
        REFERENCES [Customer] (CustomerId)
GO

ALTER TABLE [Order]
    ADD CONSTRAINT FK_Orders_ProductId FOREIGN KEY (ProductId)
        REFERENCES [Product] (ProductId)
GO

/*****************************************************************/
/******************************[DML]******************************/
/*****************************************************************/

-- Add at least 3 records into each table
INSERT INTO [Product]
    (Name, Price)
VALUES
    ('Mug', 20.00),
    ('Box of Granola Bars', 5.00),
    ('Dry Erase Markers', 3.80)
GO

INSERT INTO [Customer]
    (FirstName, LastName, CardNumber)
VALUES
    ('Vero', 'Richter', '1234567891011121'),
    ('Invictus', 'Valkyrius', '9876543210987654'),
    ('Izyk', 'Herzel', '0123654789632147')
GO

DECLARE @vero_id INT
DECLARE @invictus_id INT
DECLARE @izyk_id INT
SET @vero_id = (SELECT CustomerId FROM [Customer] WHERE FirstName = 'Vero' AND LastName = 'Richter')
SET @invictus_id = (SELECT CustomerId FROM [Customer] WHERE FirstName = 'Invictus' AND LastName = 'Valkyrius')
SET @izyk_id = (SELECT CustomerId FROM [Customer] WHERE FirstName = 'Izyk' AND LastName = 'Herzel')

DECLARE @mug_id INT
DECLARE @markers_id INT
DECLARE @granola_id INT
SET @mug_id = (SELECT ProductId FROM [Product] WHERE Name = 'Mug')
SET @markers_id = (SELECT ProductId FROM [Product] WHERE Name = 'Dry Erase Markers')
SET @granola_id = (SELECT ProductId FROM [Product] WHERE Name = 'Box of Granola Bars')

INSERT INTO [Order]
    (CustomerId, ProductId)
VALUES
    (@vero_id, @mug_id),
    (@invictus_id, @markers_id),
    (@izyk_id, @granola_id)
GO

-- Add product iPhone priced at $200
INSERT INTO [Product]
    (Name, Price)
VALUES
    ('iPhone', 200)
GO

-- Add customer Tina Smith
INSERT INTO [Customer]
    (FirstName, LastName, CardNumber)
VALUES
    ('Tina', 'Smith', '1234567890321654')

-- Create Order for Tina Smith bought an iPhone
DECLARE @iphone_id INT;
SET @iphone_id = (SELECT ProductId FROM [Product] WHERE Name = 'iPhone')

DECLARE @tina_id INT;
SET @tina_id = (SELECT CustomerId FROM [Customer] WHERE FirstName = 'Tina' AND LastName = 'Smith')

INSERT INTO [Order]
    (CustomerId, ProductId)
VALUES
    (@tina_id, @iphone_id)
GO

-- report all orders by Tina Smith
SELECT * 
FROM [Customer] as c
INNER JOIN [Order] as o
    ON c.CustomerId = o.CustomerId
WHERE c.FirstName = 'Tina' 
    AND c.LastName = 'Smith'
GO

-- report all revenue generated by sales of iPhone
-- Get the id of the 
SELECT 
    p.ProductId as [Product Id], 
    SUM(p.Price) as [Total Price]
FROM [Order] as o
LEFT JOIN [Product] as p
    ON o.ProductId = p.ProductId
GROUP BY p.ProductId
GO

-- increase the price of an iPhone to $250
UPDATE [Product]
    SET Price = 250
    WHERE Name = 'iPhone'
GO
